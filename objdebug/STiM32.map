Archive member included because of file (symbol)

c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubdf3.o)
                              C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o (__aeabi_dsub)
c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivdf3.o)
                              C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o (__aeabi_dmul)
c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunsdfsi.o)
                              C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o (__aeabi_d2uiz)
c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubsf3.o)
                              C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o (__aeabi_ui2f)
c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivsf3.o)
                              C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o (__aeabi_fmul)
c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunssfsi.o)
                              C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o (__aeabi_f2uiz)

Allocating common symbols
Common symbol       size              file

ptrCircle_API       0x4               C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o

Discarded input sections

 .text          0x00000000        0x0 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
 .data          0x00000000        0x0 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
 .bss           0x00000000        0x0 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
 .text          0x00000000        0x0 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 .text.LongDelay
                0x00000000       0x78 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 .data          0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubdf3.o)
 .bss           0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubdf3.o)
 .ARM.attributes
                0x00000000       0x1b c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubdf3.o)
 .data          0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivdf3.o)
 .bss           0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivdf3.o)
 .ARM.attributes
                0x00000000       0x1b c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivdf3.o)
 .data          0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunsdfsi.o)
 .bss           0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunsdfsi.o)
 .ARM.attributes
                0x00000000       0x1b c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunsdfsi.o)
 .data          0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubsf3.o)
 .bss           0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubsf3.o)
 .ARM.attributes
                0x00000000       0x1b c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubsf3.o)
 .data          0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivsf3.o)
 .bss           0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivsf3.o)
 .ARM.attributes
                0x00000000       0x1b c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivsf3.o)
 .data          0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunssfsi.o)
 .bss           0x00000000        0x0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunssfsi.o)
 .ARM.attributes
                0x00000000       0x1b c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunssfsi.o)

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x20000000         0x00004000         xrw
FLASHB1          0x08000000         0x0000c000         r
FLASH            0x0800c000         0x00004000         xr
EXTMEMB0         0x00000000         0x00000000         xr
EXTMEMB1         0x00000000         0x00000000         xr
EXTMEMB2         0x00000000         0x00000000         xr
EXTMEMB3         0x00000000         0x00000000         xr
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
LOAD C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
START GROUP
LOAD C:\Raisonance\Ride\Lib\ARM\std_sbrk_thumb.lib
LOAD C:\Raisonance\Ride\Lib\ARM\smallprintf_thumb.a
LOAD c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/lib/thumb2\libc.a
LOAD c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/lib/thumb2\libm.a
END GROUP
                0x00000400                __Stack_Size = 0x400
                0x00000400                PROVIDE (_Stack_Size, __Stack_Size)
                0x20004c00                __Stack_Init = (_estack - __Stack_Size)
                0x20004c00                PROVIDE (_Stack_Init, __Stack_Init)
                0x00000100                _Minimum_Stack_Size = 0x100
                0x00000000                PROVIDE (Undefined_Handler, 0x0)
                0x00000000                PROVIDE (SWI_Handler, 0x0)
                0x00000000                PROVIDE (IRQ_Handler, 0x0)
                0x00000000                PROVIDE (Prefetch_Handler, 0x0)
                0x00000000                PROVIDE (Abort_Handler, 0x0)
                0x00000000                PROVIDE (FIQ_Handler, 0x0)
                0x00000000                PROVIDE (NMIException, 0x0)
                0x00000000                PROVIDE (HardFaultException, 0x0)
                0x00000000                PROVIDE (MemManageException, 0x0)
                0x00000000                PROVIDE (BusFaultException, 0x0)
                0x00000000                PROVIDE (UsageFaultException, 0x0)
                0x00000000                PROVIDE (SVCHandler, 0x0)
                0x00000000                PROVIDE (DebugMonitor, 0x0)
                0x00000000                PROVIDE (PendSVC, 0x0)
                0x00000000                PROVIDE (SysTickHandler, 0x0)
                0x00000000                PROVIDE (WWDG_IRQHandler, 0x0)
                0x00000000                PROVIDE (PVD_IRQHandler, 0x0)
                0x00000000                PROVIDE (TAMPER_IRQHandler, 0x0)
                0x00000000                PROVIDE (RTC_IRQHandler, 0x0)
                0x00000000                PROVIDE (FLASH_IRQHandler, 0x0)
                0x00000000                PROVIDE (RCC_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI0_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI1_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI2_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI3_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI4_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel1_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel2_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel3_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel4_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel5_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel6_IRQHandler, 0x0)
                0x00000000                PROVIDE (DMAChannel7_IRQHandler, 0x0)
                0x00000000                PROVIDE (ADC_IRQHandler, 0x0)
                0x00000000                PROVIDE (USB_HP_CAN_TX_IRQHandler, 0x0)
                0x00000000                PROVIDE (USB_LP_CAN_RX0_IRQHandler, 0x0)
                0x00000000                PROVIDE (CAN_RX1_IRQHandler, 0x0)
                0x00000000                PROVIDE (CAN_SCE_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI9_5_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM1_BRK_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM1_UP_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM1_TRG_COM_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM1_CC_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM2_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM3_IRQHandler, 0x0)
                0x00000000                PROVIDE (TIM4_IRQHandler, 0x0)
                0x00000000                PROVIDE (I2C1_EV_IRQHandler, 0x0)
                0x00000000                PROVIDE (I2C1_ER_IRQHandler, 0x0)
                0x00000000                PROVIDE (I2C2_EV_IRQHandler, 0x0)
                0x00000000                PROVIDE (I2C2_ER_IRQHandler, 0x0)
                0x00000000                PROVIDE (SPI1_IRQHandler, 0x0)
                0x00000000                PROVIDE (SPI2_IRQHandler, 0x0)
                0x00000000                PROVIDE (USART1_IRQHandler, 0x0)
                0x00000000                PROVIDE (USART2_IRQHandler, 0x0)
                0x00000000                PROVIDE (USART3_IRQHandler, 0x0)
                0x00000000                PROVIDE (EXTI15_10_IRQHandler, 0x0)
                0x00000000                PROVIDE (RTCAlarm_IRQHandler, 0x0)
                0x00000000                PROVIDE (USBWakeUp_IRQHandler, 0x0)
                0x42000000                PERIPH_BB_BASE = 0x42000000
                0x22000000                SRAM_BB_BASE = 0x22000000
                0x20000000                SRAM_BASE = 0x20000000
                0x40000000                PERIPH_BASE = 0x40000000
                0x40022000                PROVIDE (FLASH_BASE, 0x40022000)
                0x1ffff800                PROVIDE (OB_BASE, 0x1ffff800)
                0x40000000                APB1PERIPH_BASE = PERIPH_BASE
                0x40010000                APB2PERIPH_BASE = (PERIPH_BASE + 0x10000)
                0x40020000                AHBPERIPH_BASE = (PERIPH_BASE + 0x20000)
                0x40000000                PROVIDE (TIM2, (APB1PERIPH_BASE + 0x0))
                0x40000400                PROVIDE (TIM3, (APB1PERIPH_BASE + 0x400))
                0x40000800                PROVIDE (TIM4, (APB1PERIPH_BASE + 0x800))
                0x40002800                PROVIDE (RTC, (APB1PERIPH_BASE + 0x2800))
                0x40002c00                PROVIDE (WWDG, (APB1PERIPH_BASE + 0x2c00))
                0x40003000                PROVIDE (IWDG, (APB1PERIPH_BASE + 0x3000))
                0x40003800                PROVIDE (SPI2, (APB1PERIPH_BASE + 0x3800))
                0x40004400                PROVIDE (USART2, (APB1PERIPH_BASE + 0x4400))
                0x40004800                PROVIDE (USART3, (APB1PERIPH_BASE + 0x4800))
                0x40005400                PROVIDE (I2C1, (APB1PERIPH_BASE + 0x5400))
                0x40005800                PROVIDE (I2C2, (APB1PERIPH_BASE + 0x5800))
                0x40006400                PROVIDE (CAN, (APB1PERIPH_BASE + 0x6400))
                0x40006c00                PROVIDE (BKP, (APB1PERIPH_BASE + 0x6c00))
                0x40007000                PROVIDE (PWR, (APB1PERIPH_BASE + 0x7000))
                0x40010000                PROVIDE (AFIO, (APB2PERIPH_BASE + 0x0))
                0x40010400                PROVIDE (EXTI, (APB2PERIPH_BASE + 0x400))
                0x40010800                PROVIDE (GPIOA, (APB2PERIPH_BASE + 0x800))
                0x40010c00                PROVIDE (GPIOB, (APB2PERIPH_BASE + 0xc00))
                0x40011000                PROVIDE (GPIOC, (APB2PERIPH_BASE + 0x1000))
                0x40011400                PROVIDE (GPIOD, (APB2PERIPH_BASE + 0x1400))
                0x40011800                PROVIDE (GPIOE, (APB2PERIPH_BASE + 0x1800))
                0x40012400                PROVIDE (ADC1, (APB2PERIPH_BASE + 0x2400))
                0x40012800                PROVIDE (ADC2, (APB2PERIPH_BASE + 0x2800))
                0x40012c00                PROVIDE (TIM1, (APB2PERIPH_BASE + 0x2c00))
                0x40013000                PROVIDE (SPI1, (APB2PERIPH_BASE + 0x3000))
                0x40013800                PROVIDE (USART1, (APB2PERIPH_BASE + 0x3800))
                0x40020000                PROVIDE (DMA, (AHBPERIPH_BASE + 0x0))
                0x40020008                PROVIDE (DMA_Channel1, (AHBPERIPH_BASE + 0x8))
                0x4002001c                PROVIDE (DMA_Channel2, (AHBPERIPH_BASE + 0x1c))
                0x40020030                PROVIDE (DMA_Channel3, (AHBPERIPH_BASE + 0x30))
                0x40020044                PROVIDE (DMA_Channel4, (AHBPERIPH_BASE + 0x44))
                0x40020058                PROVIDE (DMA_Channel5, (AHBPERIPH_BASE + 0x58))
                0x4002006c                PROVIDE (DMA_Channel6, (AHBPERIPH_BASE + 0x6c))
                0x40020080                PROVIDE (DMA_Channel7, (AHBPERIPH_BASE + 0x80))
                0x40021000                PROVIDE (RCC, (AHBPERIPH_BASE + 0x1000))
                0xe000e000                SCS_BASE = 0xe000e000
                0xe000e010                PROVIDE (SysTick, (SCS_BASE + 0x10))
                0xe000e100                PROVIDE (NVIC, (SCS_BASE + 0x100))
                0xe000ed00                PROVIDE (SCB, (SCS_BASE + 0xd00))
                0x0800ffff                _eflash = 0x800ffff
                0x20005000                _estack = 0x20005000

.isr_vector     0x0800c000       0x10
                0x0800c000                . = ALIGN (0x4)
 *(.isr_vector)
 .isr_vector    0x0800c000       0x10 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
                0x0800c000                ApplicationItem
                0x0800c010                . = ALIGN (0x4)

.flashtext      0x0800c010        0x0
                0x0800c010                . = ALIGN (0x4)
 *(.flashtext)
                0x0800c010                . = ALIGN (0x4)

.text           0x0800c010     0x1c50
                0x0800c010                . = ALIGN (0x4)
 *(.text)
 .text          0x0800c010      0x370 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubdf3.o)
                0x0800c010                __aeabi_drsub
                0x0800c018                __aeabi_dsub
                0x0800c018                __subdf3
                0x0800c01c                __aeabi_dadd
                0x0800c01c                __adddf3
                0x0800c294                __floatunsidf
                0x0800c294                __aeabi_ui2d
                0x0800c2b4                __floatsidf
                0x0800c2b4                __aeabi_i2d
                0x0800c2d8                __aeabi_f2d
                0x0800c2d8                __extendsfdf2
                0x0800c314                __floatundidf
                0x0800c314                __aeabi_ul2d
                0x0800c324                __floatdidf
                0x0800c324                __aeabi_l2d
 .text          0x0800c380      0x424 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivdf3.o)
                0x0800c380                __aeabi_dmul
                0x0800c380                __muldf3
                0x0800c5d4                __divdf3
                0x0800c5d4                __aeabi_ddiv
 .text          0x0800c7a4       0x40 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunsdfsi.o)
                0x0800c7a4                __aeabi_d2uiz
                0x0800c7a4                __fixunsdfsi
 .text          0x0800c7e4      0x21c c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_addsubsf3.o)
                0x0800c7e4                __aeabi_frsub
                0x0800c7ec                __subsf3
                0x0800c7ec                __aeabi_fsub
                0x0800c7f0                __aeabi_fadd
                0x0800c7f0                __addsf3
                0x0800c950                __aeabi_ui2f
                0x0800c950                __floatunsisf
                0x0800c958                __aeabi_i2f
                0x0800c958                __floatsisf
                0x0800c974                __aeabi_ul2f
                0x0800c974                __floatundisf
                0x0800c984                __aeabi_l2f
                0x0800c984                __floatdisf
 .text          0x0800ca00      0x2a0 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_muldivsf3.o)
                0x0800ca00                __mulsf3
                0x0800ca00                __aeabi_fmul
                0x0800cb68                __aeabi_fdiv
                0x0800cb68                __divsf3
 .text          0x0800cca0       0x40 c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a(_arm_fixunssfsi.o)
                0x0800cca0                __fixunssfsi
                0x0800cca0                __aeabi_f2uiz
 *(.text.*)
 .text.Application_Entry
                0x0800cce0       0x50 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
 .text.STIMULATOR_Handler
                0x0800cd30      0x2c8 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800cd30                STIMULATOR_Handler
 .text.Application_Ini
                0x0800cff8      0x188 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800cff8                Application_Ini
 .text.Application_Handler
                0x0800d180       0xa0 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d180                Application_Handler
 .text.TimerHandler1
                0x0800d220       0x20 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d220                TimerHandler1
 .text.MenuSetup_Freq
                0x0800d240       0x24 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d240                MenuSetup_Freq
 .text.MenuSetup_PSeq
                0x0800d264       0x24 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d264                MenuSetup_PSeq
 .text.SetFrequency_1
                0x0800d288       0x28 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d288                SetFrequency_1
 .text.SetFrequency_2
                0x0800d2b0       0x28 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d2b0                SetFrequency_2
 .text.SetFrequency_3
                0x0800d2d8       0x28 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d2d8                SetFrequency_3
 .text.SetPulseSequence_1
                0x0800d300       0x38 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d300                SetPulseSequence_1
 .text.SetPulseSequence_2
                0x0800d338       0x38 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d338                SetPulseSequence_2
 .text.SetPulseSequence_3
                0x0800d370       0x38 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d370                SetPulseSequence_3
 .text.SetPulseSequence_4
                0x0800d3a8       0x38 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d3a8                SetPulseSequence_4
 .text.Quit     0x0800d3e0       0xd0 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d3e0                Quit
 .text.RestoreApp
                0x0800d4b0       0x1c C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d4b0                RestoreApp
 .text.Cancel   0x0800d4cc       0x1c C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800d4cc                Cancel
 .text.UpdatePulseSequence
                0x0800d4e8      0x178 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 .text.GeneratePulseSequenceAndReadCAE
                0x0800d660       0xc4 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 .text.SetOutputVoltage
                0x0800d724       0xb4 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 .text.GUI      0x0800d7d8      0x3cc C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 *(.rodata)
 .rodata        0x0800dba4       0xbc C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x0800dba4                Application_Name
 *(.rodata*)
 *(.glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 *(.glue_7t)
 .glue_7t       0x00000000        0x0 linker stubs
                0x0800dc60                . = ALIGN (0x4)
                0x0800dc60                _etext = .
                0x0800dc60                _sidata = _etext

.vfp11_veneer   0x0800dc60        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x0800dc60        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.data           0x20000000      0x1f0 load address 0x0800dc60
                0x20000000                . = ALIGN (0x4)
                0x20000000                _sdata = .
 *(.data)
 .data          0x20000000      0x1f0 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                0x20000000                MenuMainSTiM32
                0x200000a4                MenuSetFrequency
                0x20000148                MenuSetPulseSequence
 *(.data.*)
                0x200001f0                . = ALIGN (0x4)
                0x200001f0                _edata = .
                0x00000000                toobig = ((_sidata + (_edata - _sdata)) > _eflash)?!!!!!!!!! FLASH IS FULL !!!!!!!!!:0x0

.bss            0x200001f0      0x154 load address 0x0800de50
                0x200001f0                . = ALIGN (0x4)
                0x200001f0                _sbss = .
 *(.bss)
 .bss           0x200001f0      0x150 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
 *(COMMON)
 COMMON         0x20000340        0x4 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
                0x20000340                ptrCircle_API
                0x20000344                . = ALIGN (0x4)
                0x20000344                _ebss = .
                0x20000344                PROVIDE (end, _ebss)
                0x20000344                PROVIDE (_end, _ebss)

._usrstack      0x20000344      0x100 load address 0x0800dfa4
                0x20000344                . = ALIGN (0x4)
                0x20000344                _susrstack = .
                0x20000444                . = (. + _Minimum_Stack_Size)
 *fill*         0x20000344      0x100 00
                0x20000444                . = ALIGN (0x4)
                0x20000444                _eusrstack = .

.b1text         0x08000000        0x4
 FILL mask 0xffffffff
 *(.b1text)
 .b1text        0x08000000        0x4 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
                0x08000000                dummy
 */()

.eb0text
 *(.eb0text)
 *(.eb0rodata)
 *(.eb0rodata*)

.eb1text
 *(.eb1text)
 *(.eb1rodata)
 *(.eb1rodata*)

.eb2text
 *(.eb2text)
 *(.eb2rodata)
 *(.eb2rodata*)

.eb3text
 *(.eb3text)
 *(.eb3rodata)
 *(.eb3rodata*)

/DISCARD/
 libc.a(*)
 libm.a(*)
 libgcc.a(*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.ARM.attributes
                0x00000000       0x31
 .ARM.attributes
                0x00000000       0x31 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
 .ARM.attributes
                0x00000031       0x31 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.comment        0x00000000       0x61
 *(.comment)
 .comment       0x00000000       0x37 C:\Raisonance\Ride\Lib\ARM\CircleOS\Application_Startup.o
 .comment       0x00000037       0x2a C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                                 0x2b (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0xc0 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_pubnames
                0x00000000      0x19b
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x19b C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_info     0x00000000      0xe51
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0xe51 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_abbrev   0x00000000      0x24f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x24f C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_line     0x00000000      0x3be
 *(.debug_line)
 .debug_line    0x00000000      0x3be C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_frame    0x00000000      0x270
 *(.debug_frame)
 .debug_frame   0x00000000      0x270 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_str      0x00000000      0xdbc
 *(.debug_str)
 .debug_str     0x00000000      0xdbc C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
                                0xe33 (size before relaxing)

.debug_loc      0x00000000      0x3e6
 *(.debug_loc)
 .debug_loc     0x00000000      0x3e6 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)
                0x00000020                PROVIDE (_Minimum_Stack_Size, 0x20)
START GROUP
LOAD c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/thumb2\libgcc.a
LOAD c:/raisonance/ride/arm-gcc/bin/../lib/gcc/arm-none-eabi/4.5.2/../../../../arm-none-eabi/lib/thumb2\libc.a
END GROUP
OUTPUT(C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.elf elf32-littlearm)

.debug_pubtypes
                0x00000000      0x264
 .debug_pubtypes
                0x00000000      0x264 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o

.debug_ranges   0x00000000       0xb0
 .debug_ranges  0x00000000       0xb0 C:\Users\Igor\Documents\GitHub\STiM32\objdebug\STiM32.o
